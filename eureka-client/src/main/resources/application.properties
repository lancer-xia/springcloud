spring.application.name=eureka-client
server.port=10011
#eureka.client.serviceUrl.defaultZone=http://localhost:10010/eureka/

# 定义Eureka server地址，zone-》eureka server list，默认已经定义了defaultZone-》http://localhost:10010/eureka/
eureka.client.service-url.defaultZone=http://admin:admin123@localhost:10010/eureka/
eureka.client.service-url.zone1=http://admin:admin123@localhost:10010/eureka/,http://admin:admin123@localhost:10010/eureka/
# 定义实例可用区域和所在区域（第一个），region-》zone list，如果region没有定义zone list，则取默认的defaultZone，会以所在区域去找eureka server
eureka.client.availability-zones.beijing=zone1,zone2
# 定义服务所在region，默认值us-east-1
eureka.client.region=beijing
# 定义Eureka server地址刷新时间间隔（默认5分钟），可以用来实现动态修改Eureka server地址
eureka.client.eureka-service-url-poll-interval-seconds=300
# 是否注册到Eureka server
eureka.client.register-with-eureka=true
# 向Eureka server发送心跳间隔
eureka.instance.lease-renewal-interval-in-seconds=5
# 如果发送心跳失败，则以2的指数形式延长心跳时间间隔，直到指数上线，然后不断重试
#eureka.client.heartbeatExecutorExponentialBackOffBound
# 如果Eureka server连续90秒内没有收到心跳，则会将其移出Eureka server
eureka.instance.lease-expiration-duration-in-seconds=5
# 首次向Eureka server发送InstanceInfo
eureka.client.initialInstanceInfoReplicationIntervalSeconds=40
# 以后每次发送InstanceInfo时间间隔
eureka.client.instanceInfoReplicationIntervalSeconds=30
# 是否从Eureka server获取注册信息
eureka.client.fetch-registry=true
# 获取注册信息时间间隔
eureka.client.registryFetchIntervalSeconds=30
# 如果获取注册信息失败，则以2的指数形式延长心跳时间间隔，直到指数上线，然后不断重试
#eureka.client.cacheRefreshExecutorExponentialBackOffBound
# 默认是增量获取注册信息
eureka.client.shouldDisableDelta=true