spring.application.name=spring-cloud-stream
server.port=0


##rabbit的配置信息
#spring.rabbitmq.addresses=amqp://localhost:5672
#spring.rabbitmq.username=spring
#spring.rabbitmq.password=1
#
## 设置一个默认的binder，如果不配置将报错
#spring.cloud.stream.default-binder=boss
spring.cloud.stream.default-binder=input
# 目的，对应 MQ 是 exchange， 生成临时队列
spring.cloud.stream.bindings.input.destination=mqTestDefault
spring.cloud.stream.bindings.output.destination=mqTestDefault
spring.cloud.stream.bindings.output.contentType=text/plain
spring.cloud.stream.bindings.output.binder=input
spring.cloud.stream.bindings.inputOrder.destination=mqTestOrder
# 具体分组 对应 MQ 是 队列名称 并且持久化队列
spring.cloud.stream.bindings.inputOrder.group=orderReceiveGroup1

spring.cloud.stream.bindings.outputOrder.destination=mqTestOrder
spring.cloud.stream.bindings.inputProductAdd.destination=mqTestProduct
# 拥有 group 默认会持久化队列
spring.cloud.stream.bindings.inputProductAdd.group=addProductHandler
spring.cloud.stream.bindings.outputProductAdd.destination=mqTestProduct
# contentType: text/plain
# 实体 json string 在传递的类型装换
rabbit:
bindings:
inputProductAdd:
consumer:
bindingRoutingKey: addProduct.*       # 用来并不绑定消费者的 routing key
outputProductAdd:
producer:
routing-key-expression: '''addProduct.*'''  # 需要用这个来指定 RoutingKey
binders:
defaultRabbit:
type: rabbit
environment:
spring:
rabbitmq:
host: 127.0.0.1
username: username
password: pass
virtual-host: dev